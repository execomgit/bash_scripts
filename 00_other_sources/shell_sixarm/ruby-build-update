#!/bin/bash
set -euf -o pipefail
out () { printf %s\\n "$*" ; }

#!/bin/bash
#
# Install the current Ruby MRI by using ruby-build
# and our preferred setup:
#
#   * Use /opt/ruby-build and git pull and install.sh to update it.
#   * Install ruby in /opt/ruby/x.y.z  and symlink /opt/ruby/current.


##
# Use the `ruby-build` program to install Ruby in our preferred locations.
#
#    /opt/ruby-build is where we put the `ruby-build` GitHub repo.
#    /opt/ruby/<vm>/<version> is where we install Ruby.
#
# Example installation directories:
#
#    /opt/ruby/kri/2.0.0-p111
#    /opt/ruby/jruby/1.7.19
#
# Syntax:
#
#    ruby-build-opt-ruby <version> [-c]
#
# Contact: Joel Parker Henderson (joel@joelparkerhenderson.com)
# License: GPL
# Updated: 2015-01-25
##


## Input

RUBY_VERSION=$1  # e.g. "2.0.0-p111"
RUBY_VERSION_SANS_PATCH_LEVEL=${RUBY_VERSION%%-p*}  # e.g. "2.0.0"
CURRENT_FLAG=$2

# Get the current KRI version,such as X.Y.Z; this variable is currently unused
RUBY_BUILD_CURRENT_DEFINITION=`ruby-build --definitions | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+$" | tail -1`


## Config

RUBY_BUILD_DIR=/opt/ruby-build
RUBY_DIR=/opt/ruby


## Install

# Install ruby-build as needed
test -d "$RUBY_BUILD_DIR" || sudo git clone https://github.com/sstephenson/ruby-build "$RUBY_BUILD_DIR"

# Update ruby-build
cd $RUBY_BUILD_DIR && git pull && ./install.sh

# Create ruby directory as needed
test -d " $RUBY_DIR" || mkdir -p $RUBY_DIR

# Install Ruby as needed
test -d "$RUBY_DIR/$RUBY_VERSION" || ruby-build "$RUBY_VERSION" "$RUBY_DIR/$RUBY_VERSION"


## Link

if [[ "$RUBY_VERSION" != "$RUBY_VERSION_SANS_PATCH_LEVEL" ]]; then
  cd $RUBY_DIR
  out "Fix symlink in $RUBY_DIR: ln -nsf $RUBY_VERSION $RUBY_VERSION_SANS_PATCH_LEVEL"
  ln -nsf $RUBY_VERSION $RUBY_VERSION_SANS_PATCH_LEVEL
fi


## Current

if [[ "$CURRENT_FLAG" == "-c" ]]; then
  cd $RUBY_DIR
  ln -nsf $RUBY_VERSION current
  source /etc/environment
  ruby -v
fi

###############
