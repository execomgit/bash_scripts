#!/bin/bash

#=================================
help_hline3 '伺服器管理(server)'

#=================================
server.prep() {
	# echo -e server.prep
    SYNC=/mnt/runtimes/$mcver/sync.sh
    [ -f $SYNC ] && . $SYNC
    
	config=/mnt/runtimes/$mcver/config.sh
	[ ! -f $config ] || . $config

	properties=/mnt/runtimes/$mcver/server.properties
	[ ! $onlinemode ] 			|| echo -e online-mode=$onlinemode >> $properties
	[ ! $serverport ] 			|| echo -e server-port=$serverport >> $properties
	
	echo -e "$server_properties" >> $properties
}

#=================================
mcwaituntilready() {
	mcresult=/tmp/mcwaituntilready
	# echo -e ================
	mcserver status > $mcresult
	if ! filehas $mcresult 'not running'; then
		# echo -e 'running'
		for i in $(seq 1 100)       
		do
			mcserver do list > $mcresult
			if filehas $mcresult 'players'; then
				break
			fi
		done
	fi
	# cat $mcresult
	# echo -e ================
}

#=================================
rematch() {
	mcserver halt
	mcserver pre_restore
	mcserver restore $*
	# mcprep
	server.prep
	mcserver start
	# sleep 1
	# mclog
	# mcserver log $*
}

#=================================
lag_check() {
    timings_report
    ncp_report

    echo -e -e "${GREEN}=== $mcver lag ${NC}"
	logs | grep 'overloaded\|TPS has dropped\|free memory pool\|服務器\|Timings'

    echo -e ================
	~/script/init.d/hosts/$(hostname) lag
    
    echo -e ================
    echo -e $(cat /proc/cpuinfo | grep 'model name' | wc -l) cores
    cat /proc/cpuinfo | grep 'model name\|bogomips\|MHz\|cache size' | sort | uniq
    
    echo -e ================
    free -h
    
    echo -e ================
    df -h
    
    echo -e ================
}

#=================================
clag_check() {
    echo -e -e "${GREEN}=== $mcver clag ${NC}"
	logs | grep '服務器'
	~/script/init.d/hosts/$(hostname) clag
    free -h
}

#=================================
timings_report() {
    export LOG_DELAY=2
    mcdo timings paste
    export LOG_DELAY=.1
    # mcdo timings report
    mcdo timings merged
    # mcdo timings separate
}

#=================================
ncp_report() {
    mcdo ncp lag
    mcdo ncp log counters
}

#=================================
alias sls='screen -ls'
alias swp='screen -wipe'
alias sr='screen -r $mcver'

#=================================
alias mcprep=server.prep

#=================================
# alias mctest='mcwaituntilready'

#=================================
#alias mced='vi /home/sita/script/minecraft/$mcver'
alias mced='vi /home/sita/script/minecraft/minecraft.server'

#=================================
# alias gamestop='mcserver backup && mcserver stop'
# alias mcstart='mcserver start'
alias mcss='mcprep && mcserver start && mcw on && sleep 1 && mclog'
alias mcww='mcprep && mcserver start && mcw off && mclf && mcserver do seed'
alias mcstop='mcdo end && mcserver stop'
alias mclog='mcserver log $*'
alias mcload='mcserver load'
alias mcsave='mcserver force-save'
# alias mcdo='mcserver do'
alias mcstat='mcserver status'
# alias mcreport='mcserver crashreport'
alias mcbackup='mcserver backup'
alias mcrestore='mcserver restore $*'
# alias mcrematch='mcserver pre_restore && mcserver restore $* && mcprep && mcserver start && sleep 1 && mclog'
# alias mckill='mcserver kill'
# alias mchalt='mcdo end && mcserver halt && swp'
#alias mchalt='mcdo end && mcserver halt'
alias mchalt='mcserver halt'
alias mcreload='mchalt && mcprep && mcserver start'

#=================================
alias mcrematch='rematch $*'

#=================================
alias mclf="mcdo gamerule logAdminCommands false"

#=================================
alias mcseal='mcserver seal'

#=================================
alias debug='export mc_debug_mode=1'
alias debugoff='export mc_debug_mode='

#=================================
# alias lag='logs | grep.lag && ~/start.mc.sh lag'
# help_add 'lag' '顯示lag'
alias lag='lag_check'
# help_add 'clag' '顯示clag'
alias clag='clag_check'
help_add 'tmo' 'Spigot計時開始'
alias tmo='mcdo timings on'
# help_add 'tmr' '計時報告'
alias tmr='timings_report'
